; ************************************
; Title
; ************************************
;
;    Title:          sysMacros.68k
;    Author:         Ren√© Richard
;    Description:
;        
;    Target Hardware:
;        Sega Genesis / Megadrive
;    Assembler:
;        ASMX
;
; LICENSE
; 
;    This file is part of 68kTutorials.
;    68kTutorials is free software: you can redistribute it and/or modify
;    it under the terms of the GNU General Public License as published by
;    the Free Software Foundation, either version 3 of the License, or
;    (at your option) any later version.
;    Foobar is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;    You should have received a copy of the GNU General Public License
;    along with 68kTutorials.  If not, see <http://www.gnu.org/licenses/>.
;
; ************************************
; MACROS
; ************************************
Z80Reset_m		MACRO
	move.w	#$0000, CTRL_Z80RESET
	exg.l	A0,A1					; waste some time
	exg.l	A1,A0
	move.w	#$0100, CTRL_Z80RESET	
	ENDM

Z80Request_m	MACRO
	move.w	#$0100, CTRL_Z80BUSREQ
.Wait\?
	btst.b	#0, CTRL_Z80BUSREQ
	bne.s	.Wait\?
	ENDM

Z80Release_m	MACRO
	move.w	#$0000, CTRL_Z80BUSREQ
	ENDM

sysMacSyncVint_m	MACRO
	lea		intflags, A0				; A0 points to intflags
.syncVint\?	
	btst	#1, (A0)					; test if a Vertical Interrupt occured
	beq.s	.syncVint					; wait until vint occurs, bit0 set = vint has happened
	bclr	#1, (A0)					; clear the intflag	

WaitVBlankStart_m	MACRO
.Wait\?
   	move.w 	VDP_CTRL, D0 			; Move VDP status word to d0
   	andi.w 	#$0008, D0    			; AND with bit 4 (vblank), result in status register
	bne.s	.Wait\?			 		; Branch if not equal (to zero)
	ENDM
 
WaitVBlankEnd_m		MACRO
.Wait\?
   	move.w 	VDP_CTRL, D0 			; Move VDP status word to d0
   	andi.w 	#$0008, D0     			; AND with bit 4 (vblank), result in status register
   	beq.s	.Wait\?  				; Branch if equal (to zero)
	ENDM
