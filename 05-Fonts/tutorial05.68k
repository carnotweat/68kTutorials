; ************************************
; Title
; ************************************
;
;    Title:          tutorial05.68k
;    Author:         Ren√© Richard
;    Description:
;        
;    Target Hardware:
;        Sega Genesis / Megadrive
;    Assembler:
;        ASMX
;
; LICENSE
; 
;    This file is part of 68kTutorials.
;    68kTutorials is free software: you can redistribute it and/or modify
;    it under the terms of the GNU General Public License as published by
;    the Free Software Foundation, either version 3 of the License, or
;    (at your option) any later version.
;    68kTutorials is distributed in the hope that it will be useful,
;    but WITHOUT ANY WARRANTY; without even the implied warranty of
;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;    GNU General Public License for more details.
;    You should have received a copy of the GNU General Public License
;    along with 68kTutorials.  If not, see <http://www.gnu.org/licenses/>.
;
; ************************************
; Tutorial 05
; ************************************
Tutorial05Entry:
			
	lea		VDP_CTRL, a5				; point to VDP port throughout
	lea		VDP_DATA, a6
	
	; load font to VRAM
	jsr		sysLoadFontPatterns			; load fonts
	
	; load palettes to VDP
	lea		Palettes, a0				; a0 points to palettes
	move.w	#(32-1), d0					; 64 palette entries to write, as 32 longs
	move.w	#0x8F02,(a5)     			; Set autoincrement to 2 bytes
	move.l	#VDP_CRAM_WRITE, (a5)		; VDP write to CRAM address 0x00
.PalLoop
	move.l	(a0)+, (a6)					; write 2 palette entries
	dbra	d0, .PalLoop
	
; Draw Text on Plane A:
; a0 - start address of string to write
; d0 - xypos
; d1 - palette
	lea		zdbString, a0
	move.l	#( (12<<16) + (10) ), d0	; place string at 12,10
	clr.w	d1							; use palette 0
	jsr		sysDrawTextPlaneA
	
	lea		zdbWasHere, a0
	move.l	#( (12<<16) + (11) ), d0	; place string at 12,11
	move.w	#1, d1						; use palette 1
	jsr		sysDrawTextPlaneA

	lea		zTestLimitChars, a0
	move.l	#( (12<<16) + (12) ), d0	; place string at 12,12
	move.w	#2, d1						; use palette 2
	jsr		sysDrawTextPlaneA

	lea		zdbString, a0
	move.l	#( (12<<16) + (13) ), d0	; place string at 12,13
	move.w	#3, d1						; use palette 3
	jsr		sysDrawTextPlaneA

	lea		zQuickBrown, a0
	move.l	#( (9<<16) + (15) ), d0		; place string at 3,15
	move.w	#0, d1						; use palette 0
	jsr		sysDrawTextPlaneA

	lea		zLazyDog, a0
	move.l	#( (7<<16) + (16) ), d0		; place string at 1,16
	move.w	#1, d1						; use palette 1
	jsr		sysDrawTextPlaneA
	
	lea		zAllOtherChars1, a0
	move.l	#( (10<<16) + (18) ), d0	; place string at 1,16
	move.w	#2, d1						; use palette 2
	jsr		sysDrawTextPlaneA
	
	lea		zAllOtherChars2, a0
	move.l	#( (10<<16) + (19) ), d0	; place string at 1,16
	move.w	#3, d1						; use palette 3
	jsr		sysDrawTextPlaneA
	
	; enable display and vint
	move.w	#0x8164, (a5)
	
Loop:
	sysMacSyncVint_m					; sync to vint
	bra.s	Loop
	
;}******************************************************************
	
zdbString:
	dc.b	'DB ELECTRONICS',0
zdbWasHere:
	dc.b	'RENE WAS HERE!',0
zTestLimitChars:
	dc.b	'__ LIMITS __',0
zQuickBrown:
	dc.b	'THE QUICK BROWN FOX',0
zLazyDog:	
	dc.b	'JUMPS OVER THE LAZY DOG',0
zAllOtherChars1:
	dc.b	'@!"#$%&()*+,-./[]\\',0
zAllOtherChars2:
	dc.b	'0123456789:;<=>?^_',0

	align 16
Palettes:
PaletteRed:	  ;BGR
	dc.w 	0x0000 ; transparent
	dc.w 	0x000E ; red 		0b1110
	dc.w 	0x000A ; less red	0b1010
	dc.w 	0x0004 ; lesser red 0b0100
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	
PaletteGreen: ;BGR
	dc.w 	0x0000 ; transparent
	dc.w 	0x00E0 ; green
	dc.w 	0x00A0 ; less green
	dc.w 	0x0040 ; lesser green
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000

PaletteBlue: ;BGR
	dc.w 	0x0000 ; transparent
	dc.w 	0x0E00 ; blue
	dc.w 	0x0A00 ; less blue
	dc.w 	0x0400 ; lesser blue
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000

PaletteWhite: ;BGR
	dc.w 	0x0000 ; transparent
	dc.w 	0x0EEE ; white
	dc.w 	0x0AAA ; less white
	dc.w 	0x0444 ; lesser white
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
	dc.w 	0x0000
